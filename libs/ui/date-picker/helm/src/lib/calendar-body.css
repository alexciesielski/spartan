.mat-calendar-body {
	--calendar-body-min-size: 224px;
	--calendar-body-cell-min-size: 32px;
	--calendar-body-cell-content-margin: 5%;
	--calendar-body-cell-content-border-width: 1px;
	--calendar-body-cell-radius: 0px;
	--calendar-body-preview-cell-border: dashed 1px;
	/* 	
	We don't want the label to jump around when we switch between month and year views, so we use
	the same amount of padding regardless of the number of columns. We align the header label with
	the one third mark of the first cell, this was chosen somewhat arbitrarily to make it look
	roughly like the mock. Half way is too far since the cell text is center aligned. 
	$calendar-body-label-side-padding: math.div(33%, 7) !default;
	*/
	--calendar-body-label-side-padding: 4.7142857143%;
	--calendar-body-cell-content-size: calc(100% - var(--calendar-body-cell-content-margin) * 2); /* 90% */
	--calendar-range-end-body-cell-size: calc(
		var(--calendar-body-cell-content-size) + var(--calendar-body-cell-content-margin)
	); /* 95% */
}

.mat-calendar-body {
	min-width: var(--calendar-body-min-size);
}

/* We use ::before to apply a background to the body cell, because we need to apply a border
radius to the start/end which means that part of the element will be cut off, making hovering
through all the cells look glitchy. We can't do it on the cell itself, because it's the one
that has the event listener and it can't be on the cell content, because it always has a
border radius. Note that this and the selectors below can be much simpler if we were to use
two separate elements for the main and comparison ranges, like we're doing for the preview
range. We don't follow the simpler approach, because the range colors usually have some
kind of opacity, which means that they'll start mixing when they're layered on top of each
other, making the calendar look messy. */
.mat-calendar-body-cell::before,
.mat-calendar-body-cell::after,
.mat-calendar-body-cell-preview {
	content: '';
	position: absolute;
	top: var(--calendar-body-cell-content-margin);
	left: 0;
	z-index: 0;
	box-sizing: border-box;
	display: block;

	height: var(--calendar-body-cell-content-size);
	width: 100%;
}

.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,
.mat-calendar-body-range-start::after,
.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,
.mat-calendar-body-comparison-start::after,
.mat-calendar-body-preview-start .mat-calendar-body-cell-preview {
	left: var(--calendar-body-cell-content-margin);
	width: var(--calendar-range-end-body-cell-size);
	border-top-left-radius: var(--calendar-body-cell-radius);
	border-bottom-left-radius: var(--calendar-body-cell-radius);
}

.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,
.mat-calendar-body-range-end::after,
.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,
.mat-calendar-body-comparison-end::after,
.mat-calendar-body-preview-end .mat-calendar-body-cell-preview {
	width: var(--calendar-range-end-body-cell-size);
	border-top-right-radius: var(--calendar-body-cell-radius);
	border-bottom-right-radius: var(--calendar-body-cell-radius);
}

/* // Prevents the extra overlap range indication from showing up when it's not supposed to. */
.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,
.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after {
	/* // Note that the RTL selector here is redundant, but we need to keep it in order to */
	/* // raise the specificity since it can be overridden by some of the styles from above. */
	width: var(--calendar-body-cell-content-size);

	[dir='rtl'] {
		width: var(--calendar-body-cell-content-size);
	}
}

.mat-calendar-body-in-preview {
	/* @include token-utils.use-tokens($_tokens...) {
    @include token-utils.create-token-slot(color, calendar-date-preview-state-outline-color);
  } */

	.mat-calendar-body-cell-preview {
		border-top: var(--calendar-body-preview-cell-border);
		border-bottom: var(--calendar-body-preview-cell-border);
	}
}

.mat-calendar-body-preview-start .mat-calendar-body-cell-preview {
	/* border-left: $calendar-body-preview-cell-border;

	[dir='rtl'] & {
		border-left: 0;
		border-right: $calendar-body-preview-cell-border;
	} */

	border-left: var(--calendar-body-preview-cell-border);
}

.mat-calendar-body-preview-end .mat-calendar-body-cell-preview {
	border-left: var(--calendar-body-preview-cell-border);

	/* [dir='rtl'] & {
		border-right: 0;
		border-left: $calendar-body-preview-cell-border;
	} */
}

.mat-calendar-body-disabled {
	cursor: default;

	/* @include token-utils.use-tokens($_tokens...) {
		& > .mat-calendar-body-cell-content {
			@include _unselected-cell {
				@include token-utils.create-token-slot(color, calendar-date-disabled-state-text-color);
			}
		}

		& > .mat-calendar-body-today {
			@include _unselected-cell {
				@include token-utils.create-token-slot(border-color, calendar-date-today-disabled-state-outline-color);
			}
		}
	} */

	/* // Fade out the disabled cells so that they can be distinguished from the enabled ones. Note that
  // ideally we'd use `color: GreyText` here which is what the browser uses for disabled buttons,
  // but we can't because Firefox doesn't recognize it.
  @include cdk.high-contrast(active, off) {
    opacity: 0.5;
  } */
}

.mat-calendar-body-cell-content {
	/* // Prevents text being off-center on Android. */
	line-height: 1;
}
